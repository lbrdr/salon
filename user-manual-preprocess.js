const path = require('path')
const fs = require('fs')

const helpPath = path.resolve(__dirname, 'renderer', 'user-manual')
const outputPath = path.resolve(__dirname, 'renderer', 'user-manual-data(auto-generated).js')

fs.writeFileSync(outputPath, '// Variables of the user-manual folder contents. Generated by user-manual-preprocess.js')

const userManualSections = {}

openFolder(0, '')

function openFolder(level, folderPath) {
	
	const dirents = fs.readdirSync(
		path.resolve(helpPath, folderPath),
		{ withFileTypes: true }
	)
	
	dirents.sort(
		(a, b) => Number(a.name.split(' - ')[0]) - Number(b.name.split(' - ')[0])
	)
	
	for (const dirent of dirents) {
		
		if (dirent.isFile()) {
			openFile(level, folderPath, dirent)
		} else {
			
			const folderName = dirent.name
			userManualSections[folderName] = { level }
			
			openFolder(level + 1, path.join(folderPath, folderName))
			
		}
		
	}
}

function openFile(level, folderPath, dirent) {
	
	const fileName = dirent.name
	const fileExt = path.extname(fileName)
	const fileBaseName = path.basename(fileName, fileExt)
	
	const filePath = path.join(folderPath, fileName)
	const fileContent = fs.readFileSync(
		path.resolve(helpPath, filePath),
		{ encoding: 'utf8' }
	)
	
	userManualSections[fileBaseName] = { level, html: fileContent }
	
}

fs.appendFileSync(outputPath, '\nuserManualSections = ')
fs.appendFileSync(
	outputPath,
	JSON.stringify(userManualSections, null, 4)
);